plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
//	mavenCentral()
//	maven { url = "https://libraries.minecraft.net/" }
//	maven { url = "https://api.modrinth.com/maven" }
//	maven { url = "https://maven.terraformersmc.com/releases/" }
//	maven { url = "https://maven.shedaniel.me/"  }
//	maven { url = "https://maven.wispforest.io" } // TOP
//	maven { url = "https://maven.blamejared.com" } // CraftTweaker, Immersive Engineering
//	maven { url = "https://www.cursemaven.com" }
//	maven { url = "https://maven.ladysnake.org/releases" }
//	maven { url = "https://mvn.devos.one/releases/" }
//	maven { url = "https://mvn.devos.one/snapshots/" }
//	maven { url = "https://maven.parchmentmc.org" }
//	maven { url = "https://maven.vram.io" }
//	maven { url = "https://jitpack.io" }
//	maven {
//		// location of the maven that hosts JEI files
//		name = "Progwml6 maven"
//		url = "https://dvs1.progwml6.com/files/maven/"
//	}
//	maven {
//		// location of a maven mirror for JEI files, as a fallback
//		name = "ModMaven"
//		url = "https://modmaven.dev"
//	}
//	maven {
//		url = "https://maven.jamieswhiteshirt.com/libs-release"
//		content {
//			includeGroup "com.jamieswhiteshirt"
//		}
//	}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"oretogo" {
			sourceSet sourceSets.main
		}
	}

}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//3rd party dependencies
//	include(implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-fabric:0.1.1")))
//	for (String module in port_lib_modules.split(",")) {
//		modImplementation(include("io.github.fabricators_of_create.Porting-Lib:$module:$port_lib_version+$minecraft_base_version"))
//	}
	
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}